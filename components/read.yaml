name: Read
outputs:
- {name: output_text}
implementation:
  container:
    image: star16231108/python:3.7
    command:
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def read(output_text_path):
          from sshtunnel import SSHTunnelForwarder
          import pymysql
          import pandas as pd
          import numpy as np
          f=open(output_text_path,'w');
          server=SSHTunnelForwarder(('47.92.240.36', 22),  ssh_username='jt',  ssh_password='vdaubCp7yaSreqlT', remote_bind_address=('192.168.0.84', 3306))
          server.start()
          conn = pymysql.connect(host='127.0.0.1',  port=server.local_bind_port,user='root',  passwd='root' , charset ='utf8',   database = 'dump',)
          sql_get_total = f"select title from ms_paper_ghl_20201026"
          df = pd.read_sql(sql_get_total, con=conn)
          df.to_csv(output_text_path,index=False)

      import argparse
      _parser = argparse.ArgumentParser(prog='Read', description='')
      _parser.add_argument("--output-text", dest="output_text_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = read(**_parsed_args)
    args:
    - --output-text
    - {outputPath: output_text}
